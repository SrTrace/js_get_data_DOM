{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCEA,I,EAAM,E,A,S,C,E,G,M,O,C,G,O,E,E,E,EAAyB,SAAS,gBAAgB,CAAC,iB,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,IACnD,EAAe,SAAS,aAAa,CAAC,qBACtC,EAAiB,SAAS,aAAa,CAAC,uBASxC,EAAkB,EAAmB,MAAM,CAAC,SAAC,CAAA,CAAK,CAAxD,EALE,IAAM,EAQN,OAAO,EANA,CAAA,MAFD,EAAS,OADM,AAOc,EAAG,SAAS,CAPtB,OAAO,CAAC,KAAM,MAGhB,EAAI,CAA3B,CAOF,EAAG,GAEG,EAAkB,KAAK,YAAY,CAAC,SACpC,EAAiB,EAAgB,MAAM,CAAC,GAExC,EAAoB,EAAkB,EAAmB,MAAM,CAC/D,EAAmB,EAAgB,MAAM,CAAC,EAEhD,CAAA,EAAa,SAAS,CAAG,EACzB,EAAe,SAAS,CAAG","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar populationElements = _to_consumable_array(document.querySelectorAll(\".population\"));\nvar totalElement = document.querySelector(\".total-population\");\nvar averageElement = document.querySelector(\".average-population\");\nfunction parseNumber(str) {\n    var clearComaStr = str.replace(/,/g, \"\");\n    var number = Number(clearComaStr);\n    return isNaN(number) ? 0 : number;\n}\nvar totalPopulation = populationElements.reduce(function(sum, el) {\n    var numberOfPeople = parseNumber(el.innerText);\n    return sum + numberOfPeople;\n}, 0);\nvar numberFormatter = Intl.NumberFormat(\"en-US\");\nvar formattedTotal = numberFormatter.format(totalPopulation);\nvar averagePopulation = totalPopulation / populationElements.length;\nvar formattedAverage = numberFormatter.format(averagePopulation);\ntotalElement.innerText = formattedTotal;\naverageElement.innerText = formattedAverage;\n\n//# sourceMappingURL=index.30df9483.js.map\n","'use strict';\n\nconst populationElements = [...document.querySelectorAll('.population')];\nconst totalElement = document.querySelector('.total-population');\nconst averageElement = document.querySelector('.average-population');\n\nfunction parseNumber(str) {\n  const clearComaStr = str.replace(/,/g, '');\n  const number = Number(clearComaStr);\n\n  return isNaN(number) ? 0 : number;\n}\n\nconst totalPopulation = populationElements.reduce((sum, el) => {\n  const numberOfPeople = parseNumber(el.innerText);\n\n  return sum + numberOfPeople;\n}, 0);\n\nconst numberFormatter = Intl.NumberFormat('en-US');\nconst formattedTotal = numberFormatter.format(totalPopulation);\n\nconst averagePopulation = totalPopulation / populationElements.length;\nconst formattedAverage = numberFormatter.format(averagePopulation);\n\ntotalElement.innerText = formattedTotal;\naverageElement.innerText = formattedAverage;\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","populationElements","_array_without_holes","isArray","document","querySelectorAll","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","totalElement","querySelector","averageElement","totalPopulation","reduce","sum","el","number","isNaN","Number","str","innerText","replace","numberFormatter","Intl","NumberFormat","formattedTotal","format","averagePopulation","formattedAverage"],"version":3,"file":"index.30df9483.js.map"}